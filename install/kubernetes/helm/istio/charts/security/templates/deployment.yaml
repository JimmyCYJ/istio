# istio CA watching all namespaces
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: istio-citadel
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "security.name" . }}
    chart: {{ template "security.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    istio: citadel
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ template "security.name" . }}
        chart: {{ template "security.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        istio: citadel
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-citadel-service-account
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
      containers:
        - name: citadel
          image: "{{ .Values.global.hub }}/{{ .Values.image }}:{{ .Values.global.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy }}
          args:
          {{- if .Values.global.sds.enabled }}
            - --sds-enabled=true
          {{- end }}
            - --append-dns-names=true
            - --grpc-port=8060
            - --grpc-hostname=citadel
            - --citadel-storage-namespace={{ .Release.Namespace }}
            - --custom-dns-names=istio-pilot-service-account.{{ .Release.Namespace }}:istio-pilot.{{ .Release.Namespace }}
            - --monitoring-port={{ .Values.global.monitoringPort }}
          {{- if .Values.selfSigned }}
            - --self-signed-ca=true
          {{- else }}
            - --self-signed-ca=false
            - --signing-cert=/etc/cacerts/ca-cert.pem
            - --signing-key=/etc/cacerts/ca-key.pem
            - --root-cert=/etc/cacerts/root-cert.pem
            - --cert-chain=/etc/cacerts/cert-chain.pem
          {{- end }}
          {{- if .Values.global.trustDomain }}
            - --trust-domain={{ .Values.global.trustDomain }}
          {{- end }}
          {{- if .Values.workloadCertTtl }}
            - --workload-cert-ttl={{ .Values.workloadCertTtl }}
          {{- end }}
          {{- if .Values.citadelHealthCheck }}
            - --liveness-probe-path=/tmp/ca.liveness # path to the liveness health check status file
            - --liveness-probe-interval=60s # interval for health check file update
            - --probe-check-interval=15s    # interval for health status check
          {{- end }}
          env:
            - name: CITADEL_ENABLE_NAMESPACES_BY_DEFAULT
              value: "{{ .Values.enableNamespacesByDefault }}"
            {{- if .Values.env }}
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /version
              port: {{ .Values.global.monitoringPort }}
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
{{- if .Values.resources }}
{{ toYaml .Values.resources | indent 12 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 12 }}
{{- end }}
{{- if not .Values.selfSigned }}
          volumeMounts:
          - name: cacerts
            mountPath: /etc/cacerts
            readOnly: true
      volumes:
      - name: cacerts
        secret:
         secretName: cacerts
         optional: true
{{- end }}
      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
